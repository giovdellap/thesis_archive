version: "3.8"
services:
  nginx:
    build: "./containers/nginx"
    ports:
      - "80:80"
      - "443:443"
    container_name: "nginx"
    networks:
      - app
    depends_on:
      - spring1
      - spring2
      - spring3
    restart: unless-stopped

  spring1:
    build: "./containers/spring"
    container_name: "spring1"
    environment:
      - ID=1
    networks:
      - app
      - db
    restart: unless-stopped

  spring2:
    build: "./containers/spring"
    container_name: "spring2"
    environment:
      - ID=2
    networks:
      - app
      - db
    restart: unless-stopped

  spring3:
    build: "./containers/spring"
    container_name: "spring3"
    environment:
      - ID=3
    networks:
      - app
      - db
    restart: unless-stopped

  node:
    build: "./containers/node"
    container_name: "node"
    ports:
      - "8080:8080"
    networks:
      - app
      - db
    restart: unless-stopped

  mongo1:
    build: "./containers/mongo"
    container_name: "mongo1"
    networks:
      - db
    command: mongod --replSet "rs0" --bind_ip_all --auth --keyFile /data/security.keyFile
    depends_on:
      - mongo2
      - mongo3
    volumes:
      - ./containers/mongo/mongo-init.js:/scripts/mongo-init.js
      - ./containers/mongo/rs-init.sh:/scripts/rs-init.sh
      - ./containers/mongo/security.keyFile:/data/security.keyFile
    restart: unless-stopped

  mongo2:
    build: "./containers/mongo"
    container_name: "mongo2"
    networks:
      - db
    command: mongod --replSet "rs0" --bind_ip_all --auth --keyFile /data/security.keyFile
    volumes:
      - ./containers/mongo/security.keyFile:/data/security.keyFile
    restart: unless-stopped

  mongo3:
    build: "./containers/mongo"
    container_name: "mongo3"
    networks:
      - db
    command: mongod --replSet "rs0" --bind_ip_all --auth --keyFile /data/security.keyFile
    volumes:
      - ./containers/mongo/security.keyFile:/data/security.keyFile
    restart: unless-stopped
      

  rabbitmq:
    build: "./containers/rabbitmq"
    container_name: "rabbitmq"
    ports:
      - "5000:15692"
    networks:
      - app


networks:
  app:
  db:
    driver: bridge
