version: "2.2"
services:

  rabbit_producer:
      restart: on-failure
      build: ./rabbit_producer
      hostname: rabbit_producer
      ports:
        - '84:8081'
      networks:
        internal:
          ipv4_address: 172.16.230.7

  rabbit_consumer:
      restart: on-failure
      build: ./rabbit_consumer
      hostname: rabbit_consumer
      ports:
        - '85:8082'
      networks:
        internal:
          ipv4_address: 172.16.230.6
  #This is the container containing the DB of the users
  mongo:
    image: mongo
    ports:
      - '2717:27017'
    networks:
      internal:
        ipv4_address: 172.16.230.9
    volumes:
      - db_auth:/data/db
      - db_auth:/data/configdb
  #This is the container containing the DB of the Events
  mongo_event:
    image: mongo
    ports:
      - '2718:27017'
    networks:
      internal:
        ipv4_address: 172.16.230.16
    volumes:
      - db_events:/data/db
      - db_events:/data/configdb

  #This is the container for the Event Service
  event:
    restart: on-failure
    build: ./event
    hostname: event1
    ports:
      - '82:3007'
    networks:
      internal:
        ipv4_address: 172.16.230.15

  #This is the container for the Authentication and Authorization service
  auth1:
    restart: on-failure
    build: ./auth
    hostname: auth1
    ports:
      - '81:3006'
    networks:
      internal:
        ipv4_address: 172.16.230.10
  #auth2:
   # restart: on-failure
    #build: ./auth
    #hostname: auth2
    #ports:
    #  - '82:5000'
  
  #This is the container containing for the API Gateway
  nginx:
    build: ./nginx
    ports:
     - '8080:80'
    environment:
      - AUTH_IP=172.16.230.10:3006
    networks:
      internal:
        ipv4_address: 172.16.230.11
    depends_on:
    - auth1
    #- auth2

  #This is the container containing the DB of the Tickets
  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - db_tickets:/data/db
      - db_tickets:/data/configdb
    networks:
      internal:
        ipv4_address: 172.16.230.12
    ports:
      - '2716:27017'

  #This is the container for the Payments Service
  payments:
    image: container_pagamento
    build: ./payments
    hostname: payments
    networks:
      internal:
        ipv4_address: 172.16.230.13

    ports:
      - '4242:4242'

networks:
  internal:
    ipam:
      driver: default
      config:
        - subnet: "172.16.230.0/24"

volumes:
  db_auth:
  db_tickets:
  db_events:

  

