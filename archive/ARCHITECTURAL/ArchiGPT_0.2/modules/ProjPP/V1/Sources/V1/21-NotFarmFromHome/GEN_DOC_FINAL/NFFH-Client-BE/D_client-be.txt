### **Service:** client-be

### Service Purpose

The "client-be" service, operating within the "NFFH-Client-BE" container, is a crucial backend component of the "Not Far(m) From Home" platform. It facilitates essential interactions between consumers and local agricultural companies. The service's primary purpose is to manage user registrations, logins, and sessions, which are critical for a personalized and secure user experience. Leveraging technologies like Java 17 and Spring Boot, the service ensures robust, secure, and efficient handling of user data and interactions within the platform. By supporting features such as registration, login, and customer data retrieval, it upholds the platform's goal of providing a seamless, secure bridge between consumers and local farmers, fostering local commerce and community engagement​​​​​​​​​​​​.

### Key Features

- User Authentication: Implements secure login and registration processes, utilizing POST methods to handle credentials and session initiation, ensuring that user interactions are authenticated and secure​​.
- Session Management: Utilizes token-based authentication to manage user sessions, enhancing the user experience by maintaining session states across visits, which aligns with user expectations for seamless platform interaction​​.
- Customer Management: Supports CRUD operations on customer data, including fetching customer details and deleting customer profiles, which empowers users to manage their interaction with the platform effectively​​.
- Data Encryption and Security: Ensures that all sensitive user data, such as passwords, are encrypted using robust security measures before storage, safeguarding user information against potential security breaches​​.
- Database Integration and ORM: Leverages Spring Data JPA for ORM with Hibernate to interact with the MySQL database, facilitating efficient and secure data handling and persistence​​.

### Endpoints:

Endpoint URL | Request Object | Response Object | HTTP Method
-------------------------------------------------------------
/client | CreateCustomerInput | SignupResponse | POST
/clients | None | List<Customer> | GET
/client/{id} | None | GetClientByIDResponse | GET
/client/{id} | None | None | DELETE
/client/login | LoginInput | LoginResponse | POST


### Data Structures:

#### CreateCustomerInput:
Variable Name | Variable Type
----------------------------
email | String
name | String
password | String

#### SignupResponse:
Variable Name | Variable Type
----------------------------
success | String
id | String

#### Customer:
Variable Name | Variable Type
----------------------------
id | Integer
email | String
name | String
password | String

#### GetClientByIDResponse:
Variable Name | Variable Type
----------------------------
username | String
email | String
password | String

#### LoginInput:
Variable Name | Variable Type
----------------------------
email | String

#### LoginResponse:
Variable Name | Variable Type
----------------------------
success | Boolean
password | String
id | String
username | String
